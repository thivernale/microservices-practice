spring.application.name=order-service
# External Config
spring.config.import=optional:configserver:http://${CONFIG_HOST:localhost}:8888
#server.port=8083
## DB
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/order-service?createDatabaseIfNotExist=true
#spring.datasource.username=${DB_USER:root}
#spring.datasource.password=${DB_PASSWORD:root}
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.open-in-view=false
## DB Migration
#spring.flyway.enabled=true
#spring.flyway.baseline-version=0
#spring.flyway.baseline-on-migrate=true
## Service Discovery
#eureka.instance.hostname=localhost
#eureka.client.service-url.defaultZone=http://${EUREKA_USERNAME:eureka}:${EUREKA_PASSWORD:password}@${EUREKA_HOST:localhost}:8761/eureka
## Actuator
#management.health.circuitbreakers.enabled=true
#management.endpoints.web.exposure.include=*
#management.endpoint.health.show-details=always
## Resilience4J Properties
#resilience4j.circuitbreaker.instances.inventory.register-health-indicator=true
#resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
#resilience4j.circuitbreaker.instances.inventory.sliding-window-type=count_based
#resilience4j.circuitbreaker.instances.inventory.sliding-window-size=5
#resilience4j.circuitbreaker.instances.inventory.failure-rate-threshold=50
#resilience4j.circuitbreaker.instances.inventory.wait-duration-in-open-state.seconds=5
#resilience4j.circuitbreaker.instances.inventory.permitted-number-of-calls-in-half-open-state=3
#resilience4j.circuitbreaker.instances.inventory.automatic-transition-from-open-to-half-open-enabled=true
## Resilience4J Timeout Properties
#resilience4j.timelimiter.instances.inventory.timeout-duration.seconds=3
## Resilience4J Retry Properties
#resilience4j.retry.instances.inventory.max-attempts=3
#resilience4j.retry.instances.inventory.wait-duration.seconds=5
## Distributed Tracing
#management.zipkin.tracing.endpoint=http://${ZIPKIN_HOST:localhost}:9411/api/v2/spans
#management.tracing.sampling.probability=1.0
## Kafka Properties
#spring.kafka.bootstrap-servers=${KAFKA_HOST:localhost}:9092
#spring.kafka.template.default-topic=orderTopic
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.properties.spring.json.type.mapping=orderPlacedEvent:org.thivernale.orderservice.event.OrderPlacedEvent
