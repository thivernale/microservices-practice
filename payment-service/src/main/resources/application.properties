spring.application.name=payment-service
# External Config
spring.config.import=optional:configserver:http://localhost:8888
#server.port=8088
## DB
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/payment-service?createDatabaseIfNotExist=true
#spring.datasource.username=${DB_USER:root}
#spring.datasource.password=${DB_PASSWORD:root}
#spring.jpa.hibernate.ddl-auto=validate
#spring.jpa.open-in-view=false
## Service Discovery
#eureka.instance.hostname=localhost
#eureka.client.service-url.defaultZone=http://${EUREKA_USERNAME:eureka}:${EUREKA_PASSWORD:password}@${EUREKA_HOST:localhost}:8761/eureka
## Distributed Tracing
#management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
#management.tracing.sampling.probability=1.0
## Kafka Properties
#spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.template.default-topic=paymentTopic
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.properties.spring.json.type.mapping=paymentEvent:org.thivernale.paymentservice.event.PaymentEvent
#spring.kafka.admin.properties.offsets.topic.replication.factor=1
#spring.kafka.admin.properties.transaction.state.log.replication.factor=1
#spring.kafka.admin.properties.transaction.state.log.min.isr=1
#spring.kafka.topics[0].name=payment-command
#spring.kafka.topics[0].partitions=1
#spring.kafka.topics[0].replication-factor=1
#spring.kafka.topics[1].name=payment-command-result
#spring.kafka.topics[1].partitions=1
#spring.kafka.topics[1].replication-factor=1
## Exchange rate integration
#exchangerates.api.key=${EXCHANGERATES_API_KEY:}
#exchangerates.api.url=https://openexchangerates.org/api/latest.json?app_id={app_id}&prettyprint=true&show_alternative=false
